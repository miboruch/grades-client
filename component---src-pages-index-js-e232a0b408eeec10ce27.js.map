{"version":3,"sources":["webpack:///./src/components/atoms/Spinner/Spinner.js","webpack:///./src/components/molecules/MobileTable/MobileTable.js","webpack:///./src/components/molecules/StandardTable/StandardTable.js","webpack:///./src/pages/index.js"],"names":["rotate","keyframes","rotateReverse","SpinnerWrapper","styled","div","StyledSpinner","Spinner","id","data-testid","StyledWrapper","TableStyles","theme","mq","standard","MobileTable","data","isDarkTheme","useContext","ThemeContext","columns","React","useMemo","Header","accessor","Cell","e","value","values","row","PageTransitionProvider","to","index","Table","StandardTable","color","mainDarkGradient","query","IndexPage","students","Layout","render","indexNumber","title","filter","student","includes"],"mappings":"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","file":"component---src-pages-index-js-e232a0b408eeec10ce27.js","sourcesContent":["import React from 'react';\nimport styled, { keyframes } from 'styled-components';\nimport PropTypes from 'prop-types';\n\nconst rotate = keyframes`\n0% { \n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n`;\n\nconst rotateReverse = keyframes`\n  0% { \n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(-360deg);\n  }\n`;\n\nconst SpinnerWrapper = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n`;\n\nconst StyledSpinner = styled.div`\n  display: block;\n  position: relative;\n  width: 150px;\n  height: 150px;\n  transform: translate(-50%, -50%);\n  border-radius: 50%;\n  border: 1px solid transparent;\n  border-top-color: #fff;\n  animation: ${rotate} 1.7s linear infinite;\n  z-index: 11;\n  &:before {\n    content: '';\n    position: absolute;\n    top: 5px;\n    left: 5px;\n    right: 5px;\n    bottom: 5px;\n    border-radius: 50%;\n    border: 1px solid transparent;\n    border-top-color: #1d1d1d;\n    animation: ${rotateReverse} 0.6s linear infinite;\n  }\n  &:after {\n    content: '';\n    position: absolute;\n    top: 15px;\n    left: 15px;\n    right: 15px;\n    bottom: 15px;\n    border-radius: 50%;\n    border: 1px solid transparent;\n    border-top-color: #878787;\n    animation: ${rotate} 1s linear infinite;\n  }\n`;\n\nconst Spinner = ({ id }) => (\n  <SpinnerWrapper data-testid={id}>\n    <StyledSpinner />\n  </SpinnerWrapper>\n);\n\nSpinner.propTypes = {\n  id: PropTypes.string\n};\n\nexport default Spinner;\n","import React, { useContext } from 'react';\nimport styled from 'styled-components';\nimport * as TableStyles from '../../../styles/tableStyles';\nimport Table from '../Table/Table';\nimport PropTypes from 'prop-types';\nimport PageTransitionProvider from '../../../providers/PageTransitionProvider';\nimport { ThemeContext } from '../../../context/ThemeContext';\n\nconst StyledWrapper = styled(TableStyles.TableWrapperStyle)`\n  width: 100%;\n  height: 90%;\n  display: flex;\n  justify-content: space-around;\n\n  ${({ theme }) => theme.mq.standard} {\n    display: none;\n  }\n`;\n\nconst MobileTable = ({ data }) => {\n  const { isDarkTheme } = useContext(ThemeContext);\n  const columns = React.useMemo(\n    () => [\n      {\n        Header: () => null,\n        id: 'position',\n        accessor: 'position',\n        Cell: (e) => (\n          <TableStyles.StyledPositionWrapper>\n            {e.value}\n            <TableStyles.IconWrapper>\n              <TableStyles.StyledUserIcon />\n            </TableStyles.IconWrapper>\n          </TableStyles.StyledPositionWrapper>\n        )\n      },\n      {\n        Header: 'Nr indexu',\n        accessor: 'index',\n        Cell: (e) => <TableStyles.StyledBold>{e.value}</TableStyles.StyledBold>\n      },\n      {\n        Header: 'Ocena',\n        accessor: 'mark'\n      },\n      {\n        Header: 'Suma',\n        accessor: 'allPoints',\n        Cell: (e) => <TableStyles.StyledBold>{e.value}</TableStyles.StyledBold>\n      },\n      {\n        Header: 'Szczegóły',\n        id: 'redirect',\n        Cell: ({ row: { values } }) => {\n          return (\n            <PageTransitionProvider\n              to={`/student/${values.index}`}\n              index={values.index}\n            >\n              <TableStyles.StyledArrowIcon />\n            </PageTransitionProvider>\n          );\n        }\n      }\n    ],\n    []\n  );\n\n  return (\n    <StyledWrapper isDarkTheme={isDarkTheme}>\n      <Table data={data} columns={columns} />\n    </StyledWrapper>\n  );\n};\n\nMobileTable.propTypes = {\n  data: PropTypes.array.isRequired\n};\n\nexport default MobileTable;\n","import React, { useContext } from 'react';\nimport styled from 'styled-components';\nimport Table from '../Table/Table';\nimport * as TableStyles from '../../../styles/tableStyles';\nimport PropTypes from 'prop-types';\nimport PageTransitionProvider from '../../../providers/PageTransitionProvider';\nimport { ThemeContext } from '../../../context/ThemeContext';\n\nconst StyledWrapper = styled(TableStyles.TableWrapperStyle)`\n  display: none;\n  width: 95%;\n  height: 90%;\n  justify-content: space-around;\n\n  ${({ theme }) => theme.mq.standard} {\n    display: flex;\n  }\n`;\n\nconst StandardTable = ({ data }) => {\n  const { isDarkTheme } = useContext(ThemeContext);\n  const columns = React.useMemo(\n    () => [\n      {\n        Header: () => null,\n        id: 'position',\n        accessor: 'position',\n        Cell: (e) => (\n          <TableStyles.StyledPositionWrapper>\n            {e.value}\n            <TableStyles.IconWrapper>\n              <TableStyles.StyledUserIcon />\n            </TableStyles.IconWrapper>\n          </TableStyles.StyledPositionWrapper>\n        )\n      },\n      {\n        Header: 'Nr indexu',\n        accessor: 'index',\n        Cell: (e) => <TableStyles.StyledBold>{e.value}</TableStyles.StyledBold>\n      },\n      {\n        Header: 'Grupa',\n        accessor: 'group'\n      },\n      {\n        Header: 'Ocena',\n        accessor: 'mark'\n      },\n      {\n        Header: 'Pkt (Wykład)',\n        accessor: 'lecturePoints'\n      },\n      {\n        Header: 'Pkt (Lab.)',\n        accessor: 'homeworkPoints'\n      },\n      {\n        Header: 'Nieobecności',\n        accessor: 'absenceCounter'\n      },\n      {\n        Header: 'Suma',\n        accessor: 'allPoints',\n        Cell: (e) => <TableStyles.StyledBold>{e.value}</TableStyles.StyledBold>\n      },\n      {\n        Header: 'Szczegóły',\n        id: 'redirect',\n        Cell: ({ row: { values } }) => {\n          return (\n            <PageTransitionProvider\n              to={`/student/${values.index}`}\n              index={values.index}\n            >\n              <TableStyles.StyledArrowIcon />\n            </PageTransitionProvider>\n          );\n        }\n      }\n    ],\n    []\n  );\n\n  return (\n    <StyledWrapper isDarkTheme={isDarkTheme}>\n      <Table data={data} columns={columns} />\n    </StyledWrapper>\n  );\n};\n\nStandardTable.propTypes = {\n  data: PropTypes.array.isRequired\n};\n\nexport default StandardTable;\n","import React, { useContext } from 'react';\nimport styled from 'styled-components';\nimport { graphql } from 'gatsby';\nimport Layout from '../components/Layout';\nimport SEO from '../components/seo';\nimport Spinner from '../components/atoms/Spinner/Spinner';\nimport MobileTable from '../components/molecules/MobileTable/MobileTable';\nimport StandardTable from '../components/molecules/StandardTable/StandardTable';\nimport { ThemeContext } from '../context/ThemeContext';\n\nconst StyledWrapper = styled.div`\n  width: 100%;\n  height: calc(100% - 100px);\n  display: flex;\n  flex-direction: column;\n  padding-bottom: 3rem;\n  align-items: center;\n  background: ${({ isDarkTheme, theme }) =>\n    isDarkTheme ? theme.color.mainDarkGradient : '#fbfbfb'};\n  transition: all 0.4s ease;\n\n  ${({ theme }) => theme.mq.standard} {\n    height: calc(100% - 60px);\n  }\n`;\n\nconst IndexPage = ({\n  data: {\n    students: { data }\n  }\n}) => {\n  const { isDarkTheme } = useContext(ThemeContext);\n\n  return (\n    <Layout\n      render={(indexNumber) => (\n        <>\n          <SEO title='Main page' />\n          <StyledWrapper isDarkTheme={isDarkTheme}>\n            {data ? (\n              <>\n                <MobileTable\n                  data={data.filter((student) =>\n                    student.index.includes(indexNumber)\n                  )}\n                />\n                <StandardTable\n                  data={data.filter((student) =>\n                    student.index.includes(indexNumber)\n                  )}\n                />\n              </>\n            ) : (\n              <Spinner />\n            )}\n          </StyledWrapper>\n        </>\n      )}\n    />\n  );\n};\n\nexport const query = graphql`\n  query {\n    students {\n      data {\n        index\n        mark\n        group\n        lecturePoints\n        homeworkPoints\n        presenceCounter\n        absenceCounter\n        allPoints\n        position\n      }\n    }\n  }\n`;\n\nexport default IndexPage;\n"],"sourceRoot":""}